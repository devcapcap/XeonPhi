// Copyright (c) 2016, Intel Corporation.
//
// This program is free software; you can redistribute it and/or modify it
// under the terms and conditions of the GNU Lesser General Public License,
// version 2.1, as published by the Free Software Foundation.
//
// This program is distributed in the hope it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.

ifdef::scif_user[SCIF_FENCE_MARK(3)]
ifndef::scif_user[SCIF_FENCE_MARK(9)]
==================
:doctype: manpage

NAME
----
scif_fence_mark - Mark previously issued RMAs.

SYNOPSIS
--------
*#include <scif.h>*

*int scif_fence_mark(scif_epd_t* 'epd'*, int* 'flags'*, int* \*'mark'*);*

DESCRIPTION
-----------
*scif_fence_mark*() returns after marking the current set of all uncompleted
RMAs initiated through the endpoint 'epd' or the current set of all
uncompleted RMAs initiated through the peer of endpoint 'epd'. The RMAs are
marked with a value returned at 'mark'. The application may subsequently call
*scif_fence_wait*(), passing the value returned at 'mark', to await completion
of all RMAs so marked.

The 'flags' argument has exactly one of the following values:

*SCIF_FENCE_INIT_SELF*::
    RMA operations initiated through endpoint 'epd' are marked
*SCIF_FENCE_INIT_PEER*::
    RMA operations initiated through the peer of endpoint 'epd' are marked

RETURN VALUE
------------
Upon successful completion, *scif_fence_mark*() returns 0;
otherwise -1 is returned and errno is set to indicate the error.

ERRORS
------
*ECONNRESET*::
 A connection was forcibly closed by a peer.
*EINVAL*::
 'flags' is invalid, or
 'epd' is not a valid endpoint descriptor, or
*ENODEV*::
 The remote node is lost.
*ENOTCONN*::
 The endpoint is not connected.
*ENOMEM*::
 Insufficient memory was available.

NOTES
-----
None

SEE ALSO
--------
*scif_readfrom*(3), *scif_writeto*(3), *scif_vreadfrom*(3), *scif_vwriteto*(3), *scif_fence_wait*(3), *scif_fence_signal*(3), *<scif.h>*
